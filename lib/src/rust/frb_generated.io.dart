// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.1.0.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

import 'api/vnt_api.dart';
import 'dart:async';
import 'dart:convert';
import 'dart:ffi' as ffi;
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_io.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_VntApiPtr => wire
      ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApiPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_VntApiCallbackPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApiCallbackPtr;

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw);

  @protected
  VntApi
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApi(
          dynamic raw);

  @protected
  VntApiCallback
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApiCallback(
          dynamic raw);

  @protected
  VntApi
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApi(
          dynamic raw);

  @protected
  FutureOr<void> Function()
      dco_decode_DartFn_Inputs__Output_unit_AnyhowException(dynamic raw);

  @protected
  FutureOr<void> Function(List<RustPeerClientInfo>)
      dco_decode_DartFn_Inputs_list_rust_peer_client_info_Output_unit_AnyhowException(
          dynamic raw);

  @protected
  FutureOr<void> Function(RustConnectInfo)
      dco_decode_DartFn_Inputs_rust_connect_info_Output_unit_AnyhowException(
          dynamic raw);

  @protected
  FutureOr<int> Function(RustDeviceConfig)
      dco_decode_DartFn_Inputs_rust_device_config_Output_u_32_AnyhowException(
          dynamic raw);

  @protected
  FutureOr<void> Function(RustDeviceInfo)
      dco_decode_DartFn_Inputs_rust_device_info_Output_unit_AnyhowException(
          dynamic raw);

  @protected
  FutureOr<void> Function(RustErrorInfo)
      dco_decode_DartFn_Inputs_rust_error_info_Output_unit_AnyhowException(
          dynamic raw);

  @protected
  FutureOr<bool> Function(RustHandshakeInfo)
      dco_decode_DartFn_Inputs_rust_handshake_info_Output_bool_AnyhowException(
          dynamic raw);

  @protected
  FutureOr<bool> Function(RustRegisterInfo)
      dco_decode_DartFn_Inputs_rust_register_info_Output_bool_AnyhowException(
          dynamic raw);

  @protected
  Object dco_decode_DartOpaque(dynamic raw);

  @protected
  VntApi
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApi(
          dynamic raw);

  @protected
  VntApiCallback
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApiCallback(
          dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  double dco_decode_box_autoadd_f_64(dynamic raw);

  @protected
  RustNatInfo dco_decode_box_autoadd_rust_nat_info(dynamic raw);

  @protected
  RustRoute dco_decode_box_autoadd_rust_route(dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_32(dynamic raw);

  @protected
  VntConfig dco_decode_box_autoadd_vnt_config(dynamic raw);

  @protected
  double dco_decode_f_64(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  PlatformInt64 dco_decode_i_64(dynamic raw);

  @protected
  List<String> dco_decode_list_String(dynamic raw);

  @protected
  Uint16List dco_decode_list_prim_u_16_strict(dynamic raw);

  @protected
  Uint64List dco_decode_list_prim_u_64_strict(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  List<(String, List<RustRoute>)> dco_decode_list_record_string_list_rust_route(
      dynamic raw);

  @protected
  List<(String, String)> dco_decode_list_record_string_string(dynamic raw);

  @protected
  List<(String, BigInt, BigInt)> dco_decode_list_record_string_u_64_u_64(
      dynamic raw);

  @protected
  List<(int, int)> dco_decode_list_record_u_32_u_32(dynamic raw);

  @protected
  List<(int, int, String)> dco_decode_list_record_u_32_u_32_string(dynamic raw);

  @protected
  List<RustPeerClientInfo> dco_decode_list_rust_peer_client_info(dynamic raw);

  @protected
  List<RustRoute> dco_decode_list_rust_route(dynamic raw);

  @protected
  String? dco_decode_opt_String(dynamic raw);

  @protected
  double? dco_decode_opt_box_autoadd_f_64(dynamic raw);

  @protected
  RustNatInfo? dco_decode_opt_box_autoadd_rust_nat_info(dynamic raw);

  @protected
  RustRoute? dco_decode_opt_box_autoadd_rust_route(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_32(dynamic raw);

  @protected
  Uint16List? dco_decode_opt_list_prim_u_16_strict(dynamic raw);

  @protected
  (String, List<RustRoute>) dco_decode_record_string_list_rust_route(
      dynamic raw);

  @protected
  (String, String) dco_decode_record_string_string(dynamic raw);

  @protected
  (String, BigInt, BigInt) dco_decode_record_string_u_64_u_64(dynamic raw);

  @protected
  (int, int) dco_decode_record_u_32_u_32(dynamic raw);

  @protected
  (int, int, String) dco_decode_record_u_32_u_32_string(dynamic raw);

  @protected
  RustConnectInfo dco_decode_rust_connect_info(dynamic raw);

  @protected
  RustCurrentDeviceInfo dco_decode_rust_current_device_info(dynamic raw);

  @protected
  RustDeviceConfig dco_decode_rust_device_config(dynamic raw);

  @protected
  RustDeviceInfo dco_decode_rust_device_info(dynamic raw);

  @protected
  RustErrorInfo dco_decode_rust_error_info(dynamic raw);

  @protected
  RustErrorType dco_decode_rust_error_type(dynamic raw);

  @protected
  RustHandshakeInfo dco_decode_rust_handshake_info(dynamic raw);

  @protected
  RustNatInfo dco_decode_rust_nat_info(dynamic raw);

  @protected
  RustPeerClientInfo dco_decode_rust_peer_client_info(dynamic raw);

  @protected
  RustRegisterInfo dco_decode_rust_register_info(dynamic raw);

  @protected
  RustRoute dco_decode_rust_route(dynamic raw);

  @protected
  int dco_decode_u_16(dynamic raw);

  @protected
  int dco_decode_u_32(dynamic raw);

  @protected
  BigInt dco_decode_u_64(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  BigInt dco_decode_usize(dynamic raw);

  @protected
  VntConfig dco_decode_vnt_config(dynamic raw);

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer);

  @protected
  VntApi
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApi(
          SseDeserializer deserializer);

  @protected
  VntApiCallback
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApiCallback(
          SseDeserializer deserializer);

  @protected
  VntApi
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApi(
          SseDeserializer deserializer);

  @protected
  Object sse_decode_DartOpaque(SseDeserializer deserializer);

  @protected
  VntApi
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApi(
          SseDeserializer deserializer);

  @protected
  VntApiCallback
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApiCallback(
          SseDeserializer deserializer);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  double sse_decode_box_autoadd_f_64(SseDeserializer deserializer);

  @protected
  RustNatInfo sse_decode_box_autoadd_rust_nat_info(
      SseDeserializer deserializer);

  @protected
  RustRoute sse_decode_box_autoadd_rust_route(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_32(SseDeserializer deserializer);

  @protected
  VntConfig sse_decode_box_autoadd_vnt_config(SseDeserializer deserializer);

  @protected
  double sse_decode_f_64(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  PlatformInt64 sse_decode_i_64(SseDeserializer deserializer);

  @protected
  List<String> sse_decode_list_String(SseDeserializer deserializer);

  @protected
  Uint16List sse_decode_list_prim_u_16_strict(SseDeserializer deserializer);

  @protected
  Uint64List sse_decode_list_prim_u_64_strict(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  List<(String, List<RustRoute>)> sse_decode_list_record_string_list_rust_route(
      SseDeserializer deserializer);

  @protected
  List<(String, String)> sse_decode_list_record_string_string(
      SseDeserializer deserializer);

  @protected
  List<(String, BigInt, BigInt)> sse_decode_list_record_string_u_64_u_64(
      SseDeserializer deserializer);

  @protected
  List<(int, int)> sse_decode_list_record_u_32_u_32(
      SseDeserializer deserializer);

  @protected
  List<(int, int, String)> sse_decode_list_record_u_32_u_32_string(
      SseDeserializer deserializer);

  @protected
  List<RustPeerClientInfo> sse_decode_list_rust_peer_client_info(
      SseDeserializer deserializer);

  @protected
  List<RustRoute> sse_decode_list_rust_route(SseDeserializer deserializer);

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer);

  @protected
  double? sse_decode_opt_box_autoadd_f_64(SseDeserializer deserializer);

  @protected
  RustNatInfo? sse_decode_opt_box_autoadd_rust_nat_info(
      SseDeserializer deserializer);

  @protected
  RustRoute? sse_decode_opt_box_autoadd_rust_route(
      SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_32(SseDeserializer deserializer);

  @protected
  Uint16List? sse_decode_opt_list_prim_u_16_strict(
      SseDeserializer deserializer);

  @protected
  (String, List<RustRoute>) sse_decode_record_string_list_rust_route(
      SseDeserializer deserializer);

  @protected
  (String, String) sse_decode_record_string_string(
      SseDeserializer deserializer);

  @protected
  (String, BigInt, BigInt) sse_decode_record_string_u_64_u_64(
      SseDeserializer deserializer);

  @protected
  (int, int) sse_decode_record_u_32_u_32(SseDeserializer deserializer);

  @protected
  (int, int, String) sse_decode_record_u_32_u_32_string(
      SseDeserializer deserializer);

  @protected
  RustConnectInfo sse_decode_rust_connect_info(SseDeserializer deserializer);

  @protected
  RustCurrentDeviceInfo sse_decode_rust_current_device_info(
      SseDeserializer deserializer);

  @protected
  RustDeviceConfig sse_decode_rust_device_config(SseDeserializer deserializer);

  @protected
  RustDeviceInfo sse_decode_rust_device_info(SseDeserializer deserializer);

  @protected
  RustErrorInfo sse_decode_rust_error_info(SseDeserializer deserializer);

  @protected
  RustErrorType sse_decode_rust_error_type(SseDeserializer deserializer);

  @protected
  RustHandshakeInfo sse_decode_rust_handshake_info(
      SseDeserializer deserializer);

  @protected
  RustNatInfo sse_decode_rust_nat_info(SseDeserializer deserializer);

  @protected
  RustPeerClientInfo sse_decode_rust_peer_client_info(
      SseDeserializer deserializer);

  @protected
  RustRegisterInfo sse_decode_rust_register_info(SseDeserializer deserializer);

  @protected
  RustRoute sse_decode_rust_route(SseDeserializer deserializer);

  @protected
  int sse_decode_u_16(SseDeserializer deserializer);

  @protected
  int sse_decode_u_32(SseDeserializer deserializer);

  @protected
  BigInt sse_decode_u_64(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  BigInt sse_decode_usize(SseDeserializer deserializer);

  @protected
  VntConfig sse_decode_vnt_config(SseDeserializer deserializer);

  @protected
  void sse_encode_AnyhowException(
      AnyhowException self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApi(
          VntApi self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApiCallback(
          VntApiCallback self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApi(
          VntApi self, SseSerializer serializer);

  @protected
  void sse_encode_DartFn_Inputs__Output_unit_AnyhowException(
      FutureOr<void> Function() self, SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_list_rust_peer_client_info_Output_unit_AnyhowException(
          FutureOr<void> Function(List<RustPeerClientInfo>) self,
          SseSerializer serializer);

  @protected
  void sse_encode_DartFn_Inputs_rust_connect_info_Output_unit_AnyhowException(
      FutureOr<void> Function(RustConnectInfo) self, SseSerializer serializer);

  @protected
  void sse_encode_DartFn_Inputs_rust_device_config_Output_u_32_AnyhowException(
      FutureOr<int> Function(RustDeviceConfig) self, SseSerializer serializer);

  @protected
  void sse_encode_DartFn_Inputs_rust_device_info_Output_unit_AnyhowException(
      FutureOr<void> Function(RustDeviceInfo) self, SseSerializer serializer);

  @protected
  void sse_encode_DartFn_Inputs_rust_error_info_Output_unit_AnyhowException(
      FutureOr<void> Function(RustErrorInfo) self, SseSerializer serializer);

  @protected
  void sse_encode_DartFn_Inputs_rust_handshake_info_Output_bool_AnyhowException(
      FutureOr<bool> Function(RustHandshakeInfo) self,
      SseSerializer serializer);

  @protected
  void sse_encode_DartFn_Inputs_rust_register_info_Output_bool_AnyhowException(
      FutureOr<bool> Function(RustRegisterInfo) self, SseSerializer serializer);

  @protected
  void sse_encode_DartOpaque(Object self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApi(
          VntApi self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApiCallback(
          VntApiCallback self, SseSerializer serializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_f_64(double self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_rust_nat_info(
      RustNatInfo self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_rust_route(
      RustRoute self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_vnt_config(
      VntConfig self, SseSerializer serializer);

  @protected
  void sse_encode_f_64(double self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_i_64(PlatformInt64 self, SseSerializer serializer);

  @protected
  void sse_encode_list_String(List<String> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_16_strict(
      Uint16List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_64_strict(
      Uint64List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_list_rust_route(
      List<(String, List<RustRoute>)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_string(
      List<(String, String)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_u_64_u_64(
      List<(String, BigInt, BigInt)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_u_32_u_32(
      List<(int, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_u_32_u_32_string(
      List<(int, int, String)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_rust_peer_client_info(
      List<RustPeerClientInfo> self, SseSerializer serializer);

  @protected
  void sse_encode_list_rust_route(
      List<RustRoute> self, SseSerializer serializer);

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_f_64(double? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_rust_nat_info(
      RustNatInfo? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_rust_route(
      RustRoute? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_32(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_prim_u_16_strict(
      Uint16List? self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_list_rust_route(
      (String, List<RustRoute>) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_string(
      (String, String) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_u_64_u_64(
      (String, BigInt, BigInt) self, SseSerializer serializer);

  @protected
  void sse_encode_record_u_32_u_32((int, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_u_32_u_32_string(
      (int, int, String) self, SseSerializer serializer);

  @protected
  void sse_encode_rust_connect_info(
      RustConnectInfo self, SseSerializer serializer);

  @protected
  void sse_encode_rust_current_device_info(
      RustCurrentDeviceInfo self, SseSerializer serializer);

  @protected
  void sse_encode_rust_device_config(
      RustDeviceConfig self, SseSerializer serializer);

  @protected
  void sse_encode_rust_device_info(
      RustDeviceInfo self, SseSerializer serializer);

  @protected
  void sse_encode_rust_error_info(RustErrorInfo self, SseSerializer serializer);

  @protected
  void sse_encode_rust_error_type(RustErrorType self, SseSerializer serializer);

  @protected
  void sse_encode_rust_handshake_info(
      RustHandshakeInfo self, SseSerializer serializer);

  @protected
  void sse_encode_rust_nat_info(RustNatInfo self, SseSerializer serializer);

  @protected
  void sse_encode_rust_peer_client_info(
      RustPeerClientInfo self, SseSerializer serializer);

  @protected
  void sse_encode_rust_register_info(
      RustRegisterInfo self, SseSerializer serializer);

  @protected
  void sse_encode_rust_route(RustRoute self, SseSerializer serializer);

  @protected
  void sse_encode_u_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_64(BigInt self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_usize(BigInt self, SseSerializer serializer);

  @protected
  void sse_encode_vnt_config(VntConfig self, SseSerializer serializer);
}

// Section: wire_class

class RustLibWire implements BaseWire {
  factory RustLibWire.fromExternalLibrary(ExternalLibrary lib) =>
      RustLibWire(lib.ffiDynamicLibrary);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  RustLibWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApi(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_vnt_app_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApi');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApi =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApi(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApi(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApiPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_vnt_app_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApi');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApi =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApiPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApiCallback(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApiCallback(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApiCallbackPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_vnt_app_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApiCallback');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApiCallback =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApiCallbackPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApiCallback(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApiCallback(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApiCallbackPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_vnt_app_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApiCallback');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApiCallback =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerVntApiCallbackPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();
}
