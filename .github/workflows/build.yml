name: VntApp

on:
  push:
    tags:
      - '*'

env:
  CARGO_TERM_COLOR: always
permissions:
  contents: write

jobs:
  build:
    name: ${{ matrix.NAME }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - NAME: vntApp-android-arm64
            OS: ubuntu-latest
            flutter-version: 3.22.0

          - NAME: vntApp-desktop-amd64
            OS: windows-2022
            flutter-version: 3.24.5

    runs-on: ${{ matrix.OS }}
    steps:
      - uses: actions/checkout@v4

      - name: 设置JDK环境
        if: matrix.NAME == 'vntApp-android-arm64'
        uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: 17

      - name: 设置NDK环境
        if: matrix.NAME == 'vntApp-android-arm64'
        run: |
          wget -q https://dl.google.com/android/repository/android-ndk-r26d-linux.zip
          unzip -q android-ndk-r26d-linux.zip -d /opt/ndk

      - name: 设置Flutter环境
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ matrix.flutter-version }}

      - name: 替换 Flutter 引擎为支持 Windows 7 的版本
        if: matrix.NAME == 'vntApp-desktop-amd64'
        shell: pwsh
        run: |
          flutter doctor -v
          flutter precache --windows
          Expand-Archive -Path ".github/patches/windows-x64-release.zip" -DestinationPath "windows-x64-release"
          Copy-Item -Path "windows-x64-release/*" -Destination "C:/hostedtoolcache/windows/flutter/stable-${{ matrix.flutter-version }}-x64/bin/cache/artifacts/engine/windows-x64-release/" -Recurse -Force

      - name: 打补丁以启用 Dropdown Menu 过滤支持
        if: matrix.NAME == 'vntApp-desktop-amd64'
        shell: bash
        run: |
          cp .github/patches/flutter_3.24.4_dropdown_menu_enableFilter.diff $(dirname $(dirname $(which flutter)))
          cd $(dirname $(dirname $(which flutter)))
          git apply flutter_3.24.4_dropdown_menu_enableFilter.diff || true

      - name: 安装 Rust Android arm64 架构
        if: matrix.NAME == 'vntApp-android-arm64'
        run: |
          rustup target add aarch64-linux-android

      - name: 构建 arm64-v8a Rust 动态库
        if: matrix.NAME == 'vntApp-android-arm64'
        run: |
          cd rust
          rm -rf .cargo/config
          export PATH=/opt/ndk/android-ndk-r26d:/opt/ndk/android-ndk-r26d/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH  
          cat >> .cargo/config <<EOF
          [target.aarch64-linux-android]
          ar = "/opt/ndk/android-ndk-r26d/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar"
          linker = "/opt/ndk/android-ndk-r26d/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang"
          EOF
          echo -e "\n\033[1;32m构建 aarch64-linux-android\033[0m\n"
          cargo build --target aarch64-linux-android --release
          mkdir -p ../android/app/src/main/jniLibs/arm64-v8a
          mv -f target/aarch64-linux-android/release/*.so ../android/app/src/main/jniLibs/arm64-v8a/librust_lib_vnt_app.so

      - name: 构建 Android vntAPP（仅 arm64）
        if: matrix.NAME == 'vntApp-android-arm64'
        run: |
          sed -i '0,/local_ipv4,/{s/local_ipv4,/local_ipv4.map(|ip| ip.to_string()),/}' rust/src/api/vnt_api.rs
          sed -i '/ErrorType::Unknown => RustErrorType::Unknown,/a\    _ => RustErrorType::Unknown,' rust/src/api/vnt_api.rs

          flutter clean
          flutter pub get
          flutter build apk --release 
          mv -f build/app/outputs/flutter-apk/app-release.apk app-release.apk

      - name: 构建 Windows vntAPP（x86_64）
        if: matrix.NAME == 'vntApp-desktop-amd64'
        shell: pwsh
        run: |
          flutter pub get
          flutter build windows --release -v

          echo "构建完成，开始打包"
          Compress-Archive -Path build\windows\x64\runner\Release\* -DestinationPath $Env:GITHUB_WORKSPACE/vntApp-windows.zip -Force

      - name: Archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.NAME }}
          path: ${{ matrix.NAME == 'vntApp-android-arm64' && 'app-release.apk' || 'vntApp-windows.zip' }}

  deploy:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: List
        run: find ./artifacts

      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: |
            ./artifacts/vntApp-desktop-amd64/vntApp-windows.zip
            ./artifacts/vntApp-android-arm64/app-release.apk
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
